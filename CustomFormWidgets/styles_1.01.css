/* Styles for the select custom widget */

/* Required styles for the three different states of the widget */
.select {
  /* position context for list options */
  position: relative;

  /* make widget part of text flow and sizable */
  display: inline-block;
}

.select.active,
.select:focus {
  outline: none;

  /* Make the active state visible */
  box-shadow: 0 0 3px 1px #AED6F1;
}

/* Styles for options list */
.select .optlist {
  /* This places the list options outside of the html flow and below the value */
  position: absolute;
  top: 100%;
  left : 0;
}

/* extra class to handle when the list is hidden. Necessary to manage the differences btwn. active  and  open state that dont exactly match */

.select .optlist.hidden {
  /* simple way to hide the list */
  max-height: 0;
  visibility: hidden;
}

/* Styles for visual aesthetic */
.select {
  font-size: 0.625em; /* 10px */
  font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;

  -moz-box-sizing: border-box;
  box-sizing: border-box;

  /* extra room for down arrow */
  padding: .1em 2.5em .2em .5em; /* 1pz 25px 2px 5px */
  width: 10em; /* 100px */

  border: .2em solid plum; /*2px */
  border-radius: .5em; /* 5px */
  box-shadow: 0 .1em .3em rgba(0,0,0,.45); /* 0px 1px 3px */

  /* regular background and fallbacks for older browsers */
  background : #F0F0F0;
  background : -webkit-linear-gradient(90deg, #E3E3E3, #fcfcfc 50%, #f0f0f0);
  background : linear-gradient(0deg, #E3E3E3, #fcfcfc 50%, #f0f0f0);
}
  .select .value {
  /* The value can be larger than the widget, this ensures that the widget's width won't change */
  display: inline-block;
  width: 100%;
  overflow: hidden;

  vertical-align: top;

  /* If the content overflows, it is better to use ellipsis */
  white-space: nowrap;
  text-overflow: ellipsis;
}

/* We use the : after pseudo-element to design the down arrow */
.select:after {
  content: "ðŸ¢ƒ"; /* down arrow unicode character */
  position: absolute;
  z-index: 1; /* keeps arrow from overlappingon list options */
  top: 0;
  right: 0;

  -moz-box-sizing: border-box;
  box-sizing: border-box;

  height: 100%;
  width: 2em; /* 20px */
  padding: .1em; /* 1pz */

  border-left: .2em solid gold; /* 2px */
  border-radius: 0 .1em .1em 0; /* 0 1px 1px 0 */

  background-color: #2C3E50;
  color: #FFF;
  text-align: center;
}

/* Styles for options list */
.select .optlist {
  z-index: 2; /* explixitly state that the options list will overlap the down arrow */

  /* reset the default styles for the unordered lust */
  list-style: none;
  margin: 0;
  padding: 0;

  -moz-box-sizing: border-box;
  box-sizing: border-box;

  /* Even when values are smaller than the widget, the list options will at least be as large as the widget */
  min-width: 100%;

    /* In case the list is too long, its content will overflow vertically 
     (which will add a vertical scrollbar automatically) but never horizontally 
     (because we haven't set a width, the list will adjust its width automatically. 
     If it can't, the content will be truncated) */
     max-height:  10em; /* 100px */
     overflow-y: auto;
     overflow-x: hidden;

    border: .2em solid #000; /* 2px */
    border-top-width: .1em; /* 1px */
    border-radius: 0 0 .4em; /* 0 0 4px 4px */

    box-shadow: 0 .2em .4em rgba(0,0,0,.4); /* 0 2x 4px */
    background: #f0f0f0;
}

/* highlight class to identify what the user has chosen */
.select .option {
  padding: .2em .3em; /* 2px 3px */
}

.select .highlight {
  background: #000;
  color: #FFFFFF;
}

/* CSS Selectors used to hide unused elements */
.widget select,
.no-widget select {
  /* Here is what is happening:
     We either have the body class "widget" so we    hide the actual <select> element, or the body class has not changed so the elements whose class is "select" is hidden */
     position: absolute;
     left: -5000em;
     height: 0;
     overflow: hidden;
}